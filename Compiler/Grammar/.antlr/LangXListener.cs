//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/Users/jakub/Documents/CSharpCompiler/Compiler/Grammar/LangX.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="LangXParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public interface ILangXListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangXParser.start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStart([NotNull] LangXParser.StartContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangXParser.start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStart([NotNull] LangXParser.StartContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangXParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStat([NotNull] LangXParser.StatContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangXParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStat([NotNull] LangXParser.StatContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>expr</c>
	/// labeled alternative in <see cref="LangXParser.assign"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpr([NotNull] LangXParser.ExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>expr</c>
	/// labeled alternative in <see cref="LangXParser.assign"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpr([NotNull] LangXParser.ExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangXParser.reassign"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReassign([NotNull] LangXParser.ReassignContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangXParser.reassign"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReassign([NotNull] LangXParser.ReassignContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangXParser.write"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWrite([NotNull] LangXParser.WriteContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangXParser.write"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWrite([NotNull] LangXParser.WriteContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangXParser.read"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRead([NotNull] LangXParser.ReadContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangXParser.read"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRead([NotNull] LangXParser.ReadContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangXParser.expr0"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpr0([NotNull] LangXParser.Expr0Context context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangXParser.expr0"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpr0([NotNull] LangXParser.Expr0Context context);
	/// <summary>
	/// Enter a parse tree produced by the <c>add</c>
	/// labeled alternative in <see cref="LangXParser.op1"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAdd([NotNull] LangXParser.AddContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>add</c>
	/// labeled alternative in <see cref="LangXParser.op1"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAdd([NotNull] LangXParser.AddContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>sub</c>
	/// labeled alternative in <see cref="LangXParser.op1"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSub([NotNull] LangXParser.SubContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>sub</c>
	/// labeled alternative in <see cref="LangXParser.op1"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSub([NotNull] LangXParser.SubContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangXParser.expr1"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpr1([NotNull] LangXParser.Expr1Context context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangXParser.expr1"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpr1([NotNull] LangXParser.Expr1Context context);
	/// <summary>
	/// Enter a parse tree produced by the <c>mul</c>
	/// labeled alternative in <see cref="LangXParser.op2"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMul([NotNull] LangXParser.MulContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>mul</c>
	/// labeled alternative in <see cref="LangXParser.op2"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMul([NotNull] LangXParser.MulContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>div</c>
	/// labeled alternative in <see cref="LangXParser.op2"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDiv([NotNull] LangXParser.DivContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>div</c>
	/// labeled alternative in <see cref="LangXParser.op2"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDiv([NotNull] LangXParser.DivContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>int</c>
	/// labeled alternative in <see cref="LangXParser.expr2"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInt([NotNull] LangXParser.IntContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>int</c>
	/// labeled alternative in <see cref="LangXParser.expr2"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInt([NotNull] LangXParser.IntContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>float</c>
	/// labeled alternative in <see cref="LangXParser.expr2"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFloat([NotNull] LangXParser.FloatContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>float</c>
	/// labeled alternative in <see cref="LangXParser.expr2"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFloat([NotNull] LangXParser.FloatContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>id</c>
	/// labeled alternative in <see cref="LangXParser.expr2"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterId([NotNull] LangXParser.IdContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>id</c>
	/// labeled alternative in <see cref="LangXParser.expr2"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitId([NotNull] LangXParser.IdContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>string</c>
	/// labeled alternative in <see cref="LangXParser.expr2"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterString([NotNull] LangXParser.StringContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>string</c>
	/// labeled alternative in <see cref="LangXParser.expr2"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitString([NotNull] LangXParser.StringContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>exprInParens</c>
	/// labeled alternative in <see cref="LangXParser.expr2"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprInParens([NotNull] LangXParser.ExprInParensContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>exprInParens</c>
	/// labeled alternative in <see cref="LangXParser.expr2"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprInParens([NotNull] LangXParser.ExprInParensContext context);
}
